#
define patterndb::simple::ruleset (
  $patterns,
  $pubdate,
  $rules = [],
  $id = $name,
  $parser = 'default',
  $version        = 4,
  $description    = 'generated by puppet',
  $url            = undef,
) {

  if ! defined(Class['Patterndb']) {
    include ::patterndb
  }

  $patterns_a = string2array($patterns)
  $rules_a = hash2array($rules)
  validate_string($url)
  validate_string($parser)
  validate_string($description)
  validate_string($pubdate)
  validate_re($version, '^\d+$')
  validate_re($pubdate, '^\d+-\d+-\d+$')

  if ! defined(Patterndb::Parser[$parser]) {
    patterndb::parser { $parser: }
  }

  $pdb_file = "${patterndb::pdb_dir}/${parser}/${name}.pdb"

  concat { "patterndb_simple_ruleset-${title}":
    path   => $pdb_file,
    notify => Exec["patterndb::merge::${parser}"],
  }

  concat::fragment { "patterndb_simple_ruleset-${title}-header":
    target  => "patterndb_simple_ruleset-${title}",
    content => template('patterndb/ruleset-header.erb'),
    order   => '001'
  }
  concat::fragment { "patterndb_simple_ruleset-${title}-footer":
    target  => "patterndb_simple_ruleset-${title}",
    content => template('patterndb/ruleset-footer.erb'),
    order   => 'zzz'
  }

  if (! empty($rules)) { # monolithic ruleset definition
    # import embedded rules
    patterndb_simple_rule ($name, $rules_a)
  }
}
